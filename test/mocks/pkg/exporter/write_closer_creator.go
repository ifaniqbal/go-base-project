// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// WriteCloserCreator is an autogenerated mock type for the WriteCloserCreator type
type WriteCloserCreator struct {
	mock.Mock
}

type WriteCloserCreator_Expecter struct {
	mock *mock.Mock
}

func (_m *WriteCloserCreator) EXPECT() *WriteCloserCreator_Expecter {
	return &WriteCloserCreator_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: path
func (_m *WriteCloserCreator) Create(path string) (io.WriteCloser, error) {
	ret := _m.Called(path)

	var r0 io.WriteCloser
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (io.WriteCloser, error)); ok {
		return rf(path)
	}
	if rf, ok := ret.Get(0).(func(string) io.WriteCloser); ok {
		r0 = rf(path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.WriteCloser)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WriteCloserCreator_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type WriteCloserCreator_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - path string
func (_e *WriteCloserCreator_Expecter) Create(path interface{}) *WriteCloserCreator_Create_Call {
	return &WriteCloserCreator_Create_Call{Call: _e.mock.On("Create", path)}
}

func (_c *WriteCloserCreator_Create_Call) Run(run func(path string)) *WriteCloserCreator_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *WriteCloserCreator_Create_Call) Return(_a0 io.WriteCloser, _a1 error) *WriteCloserCreator_Create_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *WriteCloserCreator_Create_Call) RunAndReturn(run func(string) (io.WriteCloser, error)) *WriteCloserCreator_Create_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewWriteCloserCreator interface {
	mock.TestingT
	Cleanup(func())
}

// NewWriteCloserCreator creates a new instance of WriteCloserCreator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWriteCloserCreator(t mockConstructorTestingTNewWriteCloserCreator) *WriteCloserCreator {
	mock := &WriteCloserCreator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
