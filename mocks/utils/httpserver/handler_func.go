// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	httpserver "bitbucket.org/ifan-moladin/base-project/utils/httpserver"
	mock "github.com/stretchr/testify/mock"
)

// HandlerFunc is an autogenerated mock type for the HandlerFunc type
type HandlerFunc struct {
	mock.Mock
}

type HandlerFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *HandlerFunc) EXPECT() *HandlerFunc_Expecter {
	return &HandlerFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: ctx
func (_m *HandlerFunc) Execute(ctx httpserver.Context) {
	_m.Called(ctx)
}

// HandlerFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type HandlerFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - ctx httpserver.Context
func (_e *HandlerFunc_Expecter) Execute(ctx interface{}) *HandlerFunc_Execute_Call {
	return &HandlerFunc_Execute_Call{Call: _e.mock.On("Execute", ctx)}
}

func (_c *HandlerFunc_Execute_Call) Run(run func(ctx httpserver.Context)) *HandlerFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(httpserver.Context))
	})
	return _c
}

func (_c *HandlerFunc_Execute_Call) Return() *HandlerFunc_Execute_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewHandlerFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandlerFunc creates a new instance of HandlerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandlerFunc(t mockConstructorTestingTNewHandlerFunc) *HandlerFunc {
	mock := &HandlerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
